{"version":3,"sources":["pages/Auth.js","components/AuthCheck.js","Card.js","pages/Countries.js","App.js","reportWebVitals.js","index.js"],"names":["props","className","onSubmit","e","preventDefault","console","log","data","email","target","value","pass","options","method","headers","body","JSON","stringify","nativeEvent","submitter","id","fetch","then","result","json","output","status","alert","message","localStorage","setItem","token","setIsLoggedIn","removeItem","name","type","isLoggedIn","children","src","imgSrc","Countries","useState","countryList","setCountryList","useEffect","map","item","flag","App","getItem","countries","personalRoutes","path","exact","AuthCheck","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.72054e05.chunk.js","sourcesContent":["import './Auth.css';\n\nexport default function(props) {\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(e);\n\n        let data = {};\n\n        data.email = e.target[0].value;\n        data.pass = e.target[1].value;\n\n        let urlRegister = 'https://auth404.herokuapp.com/api/auth/register';\n        let urlLogin = 'https://auth404.herokuapp.com/api/auth/login';\n        let options = {\n            method:'POST', \n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body:JSON.stringify(data)\n        }\n\n        if (e.nativeEvent.submitter.id == \"register\"){\n            //alert('register')\n            //console.log(data)\n            fetch(urlRegister, options).then(result=>result.json().then(output=> {\n                if (output.status == \"success\") {\n                    alert(\"Congrats, you are registered! Please log in.\");\n                } else {\n                    alert(output.message);\n                }\n            }\n        ));\n\n\n        } else if (e.nativeEvent.submitter.id == \"login\") {\n            fetch(urlLogin, options).then(result=>result.json()\n            .then(output=> {\n                if (output.status == \"success\") {\n                    localStorage.setItem(\"token\", output.token);\n                    console.log(props.setIsLoggedIn);\n                    props.setIsLoggedIn(true);\n                } else {\n                    localStorage.removeItem(\"token\");\n                }\n            }));;\n        }\n    }\n\n    return (\n        <div className = \"wrapper\">\n            <form onSubmit = {submitHandler}>\n                <input name = \"email\" type = \"email\" />\n                <input  name = \"pass\" type = \"password\" />\n                <section>\n                    <input id = \"register\" type = \"submit\" value = \"Register\"/>\n                    <input id = \"login\" type = \"submit\" value = \"Login\"/>\n                </section>\n            </form>\n        </div>\n    )\n}\n","import Auth from '../pages/Auth';\n\n// This component functions as a login checker to see what it should render inside it\n// That's why we use props.children\nexport default function(props) {\n\n    let output;\n\n    if (props.isLoggedIn) {\n        output = props.children;\n    } else {\n        output = <Auth setIsLoggedIn = {props.setIsLoggedIn} />\n    }\n\n    return output;\n}","import './Card.css';\n\nexport default function (props) {\n    return(\n        <div className = \"card\">\n            <img src = {props.imgSrc}/>\n            <h3>{props.name}</h3>\n        </div>\n    );\n}","import {useState, useEffect} from 'react';\nimport Card from '../Card';\n\nfunction Countries() {\n\n    const [countryList, setCountryList] = useState([])\n\n    let url = 'https://restcountries.eu/rest/v2/all';\n    let options = {\n        /* timeDiff: '1',\n        component:item => <Card imgSrc = {item.flag} name = {item.name}/>,\n        log:true */\n    };\n\n    useEffect(()=>{\n\n        //axios({url, ...options}).then(res => console.log('axios', res)); \n\n        /* fetch(url,options).then(result=>result.json().then(output=>{\n        console.log('fetch',output, result)\n        })); */\n\n        //kyc(url, options).then(res => setCountryList(res));\n\n        fetch(url, options).then(result => {\n            console.log(result);\n            result.json().then(output => {\n                //console.log(output);\n                //Code goes here...\n                //TO-DO: check map below\n                setCountryList(output.map(item=><Card \n                                                imgSrc = {item.flag} \n                                                name = {item.name}\n                                                />\n                ));\n            })\n        });\n    }, []);\n\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            {countryList}\n        </header>\n        </div>\n    );\n}\n\nexport default Countries;\n","import './App.css';\nimport {Route, Switch} from 'react-router-dom'\nimport Auth from './pages/Auth'\nimport AuthCheck from './components/AuthCheck'\nimport Countries from './pages/Countries'\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"token\");\n    if (token !== null) {\n      setIsLoggedIn(true)\n    } else {\n      setIsLoggedIn(false)\n    }\n  }, [])\n\n  let countries = <Auth setIsLoggedIn = {setIsLoggedIn} />;\n  if (isLoggedIn) {\n    countries = <Countries/>\n  }\n\n  let personalRoutes = [\n    <Route path=\"/personal/home\"><div>Home</div></Route>,\n    <Route path=\"/personal/profile\"><div>Profile</div></Route>,\n    <Route path=\"/personal/email\"><div>Email</div></Route>,\n    <Route path=\"/personal/setting\"><div>Settings</div></Route>\n  ]\n\n  let authCheck = <Auth setIsLoggedIn = {setIsLoggedIn}/>\n\n  return (\n    \n    <Switch>\n      <Route exact path=\"/\">\n        <AuthCheck isLoggedIn = {isLoggedIn} setIsLoggedIn = {setIsLoggedIn}>\n          {countries}\n        </AuthCheck>\n      </Route>\n\n      <Route path=\"/auth\">\n        <Auth setIsLoggedIn = {setIsLoggedIn}/>\n      </Route>\n\n      {/* Rendering an array of protected routed once auth successful */}\n      <Route path=\"/personal\">\n        <AuthCheck isLoggedIn = {isLoggedIn} setIsLoggedIn = {setIsLoggedIn}>\n          {personalRoutes}\n        </AuthCheck>\n      </Route>\n    \n      <Route path=\"/countries\">\n        <AuthCheck isLoggedIn = {isLoggedIn} setIsLoggedIn = {setIsLoggedIn}>\n          {countries}\n        </AuthCheck>\n      </Route>\n\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App/> \n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}